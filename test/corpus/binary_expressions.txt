==================
Binary expressions
==================

Arithmetic operators
------------------

def a = 2 + 2
def b = 10 - 5
def c = 4 * 3
def d = 15 / 3
def e = 10 % 3
def f = 2 ** 3
---

(source_file
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number))))

Comparison operators
------------------

def eq = x == y
def neq = x != y
def lt = x < y
def gt = x > y
def lte = x <= y
def gte = x >= y
---

(source_file
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier))))

Logical operators
------------------

def and = a && b
def or = a || b
def complex = (x > 0) && (y < 10)
---

(source_file
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (binary_expression
        (identifier)
        (number))
      (binary_expression
        (identifier)
        (number)))))

Range operators
------------------

def inclusive = 1..5
def exclusive = 1..<5
def var_range = start..end
---

(source_file
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (number)
      (number)))
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (identifier))))

Compound expressions
------------------

def compound1 = a + b * c
def compound2 = (a + b) * c
def compound3 = x > 0 && y < 10 || z == 0
---

(source_file
  (variable_declaration
    (identifier)
    (binary_expression
      (identifier)
      (binary_expression
        (identifier)
        (identifier))))
  (variable_declaration
    (identifier)
    (binary_expression
      (binary_expression
        (identifier)
        (identifier))
      (identifier)))
  (variable_declaration
    (identifier)
    (binary_expression
      (binary_expression
        (binary_expression
          (identifier)
          (number))
        (binary_expression
          (identifier)
          (number)))
      (binary_expression
        (identifier)
        (number))))) 