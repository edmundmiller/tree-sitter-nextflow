==================
Channel factories
:skip
==================

numbers = Channel.of(1..10)
files = Channel.fromPath('data/*.txt')
pairs = Channel.fromFilePairs('data/*_{1,2}.fastq')
values = Channel.value('constant')

---

(source_file
  (assignment
    (identifier)
    (channel_expression
      (channel_of)))
  (assignment
    (identifier)
    (channel_expression
      (channel_from_path)))
  (assignment
    (identifier)
    (channel_expression
      (channel_from_pairs)))
  (assignment
    (identifier)
    (channel_expression
      (channel_value))))

==================
Channel operators
:skip
==================

ch1 = Channel.of(1,2,3)
ch2 = Channel.of('a','b','c')

combined = ch1.combine(ch2)
joined = ch1.join(ch2)
crossed = ch1.cross(ch2)
grouped = ch1.groupTuple(by: 2)

---

(source_file
  (assignment
    (identifier)
    (channel_expression))
  (assignment
    (identifier)
    (channel_expression))
  (assignment
    (identifier)
    (channel_operator))
  (assignment
    (identifier)
    (channel_operator))
  (assignment
    (identifier)
    (channel_operator))
  (assignment
    (identifier)
    (channel_operator)))

==================
Channel methods
:skip
==================

result = Channel.of(1,2,3,4)
    .filter { it > 2 }
    .map { it * 2 }
    .collect()
    .view()

---

(source_file
  (assignment
    (identifier)
    (pipe_expression
      (channel_expression)
      (channel_operator)
      (channel_operator)
      (channel_operator)
      (channel_operator)))) 