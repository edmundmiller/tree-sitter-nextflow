==================
Try catch blocks
:skip
==================

try {
    file = file('missing.txt')
} catch (Exception e) {
    println "File not found: ${e.message}"
} finally {
    println "cleanup"
}

---

(source_file
  (try_statement
    (block
      (assignment
        (identifier)
        (function_call)))
    (catch_clause
      (identifier)
      (identifier)
      (block
        (expression_statement)))
    (finally_clause
      (block
        (expression_statement)))))

==================
Process error handling
:skip
==================

process errorExample {
    errorStrategy 'retry'
    maxRetries 3
    
    input:
    val x
    
    script:
    """
    if [ \$x -lt 0 ]; then
        exit 1
    fi
    """
}

---

(source_file
  (process_definition
    (identifier)
    (directive_block
      (directive)
      (directive))
    (input_block
      (input_declaration))
    (script_block
      (script_content))))

==================
Error directives
:skip
==================

process withErrorDirectives {
    errorStrategy { task.exitStatus == 1 ? 'retry' : 'terminate' }
    maxErrors 5
    maxRetries 3
    
    script:
    """
    echo "doing work"
    """
}

---

(source_file
  (process_definition
    (identifier)
    (directive_block
      (directive)
      (directive)
      (directive))
    (script_block
      (script_content)))) 